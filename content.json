[{"title":"强制类型转换（引用类型）","date":"2017-12-22T11:01:27.000Z","path":"2017/12/22/强制类型转换（引用类型）/","text":"&emsp;&emsp;在java中强制类型转换分为基本数据类型和引用数据类型两种，这里我们讨论的后者，也就是引用数据类型的强制类型转换。&emsp;&emsp;在Java中由于继承和向上转型，子类可以非常自然地转换成父类，但是父类转换成子类则需要强制转换。因为子类拥有比父类更多的属性、更强的功能，所以父类转换为子类需要强制。那么，是不是只要是父类转换为子类就会成功呢？其实不然，他们之间的强制类型转换是有条件的。当我们用一个类型的构造器构造出一个对象时，这个对象的类型就已经确定的，也就说它的本质是不会再发生变化了。在Java中我们可以通过继承、向上转型的关系使用父类类型来引用它，这个时候我们是使用功能较弱的类型引用功能较强的对象，这是可行的。但是将功能较弱的类型强制转功能较强的对象时，就不一定可以行了。举个例子来说明。比如系统中存在Father、Son两个对象。首先我们先构造一个Son对象，然后用一个Father类型变量引用它：1Father father = new Son(); &emsp;&emsp;在这里Son 对象实例被向上转型为father了，但是请注意这个Son对象实例在内存中的本质还是Son类型的，只不过它的能力临时被消弱了而已，如果我们想变强怎么办？将其对象类型还原！1Son son = (Son)father; &emsp;&emsp;这条语句是可行的，其实father引用仍然是Father类型的，只不过是将它的能力加强了，将其加强后转交给son引用了，Son对象实例在son的变量的引用下，恢复真身，可以使用全部功能了。前面提到父类强制转换成子类并不是总是成功，那么在什么情况下它会失效呢？当引用类型的真实身份是父类本身的类型时，强制类型转换就会产生错误。例如：12Father father = new Father();Son son = (Son) father; &emsp;&emsp;这个系统会抛出ClassCastException异常信息。所以编译器在编译时只会检查类型之间是否存在继承关系，有则通过；而在运行时就会检查它的真实类型，是则通过，否则抛出ClassCastException异常。所以在继承中，子类可以自动转型为父类，但是父类强制转换为子类时只有当引用类型真正的身份为子类时才会强制转换成功，否则失败。","tags":[{"name":"JAVA","slug":"JAVA","permalink":"http://yaojian.me/tags/JAVA/"},{"name":"类型转换","slug":"类型转换","permalink":"http://yaojian.me/tags/类型转换/"}]},{"title":"Oracl安装开始操作系统版本检查不通过","date":"2017-12-22T03:31:06.000Z","path":"2017/12/22/Oracl安装开始操作系统版本检查不通过/","text":"问题：在windows操作系统上安装oracle 10G R2时出现了标题中的错误，如下图： 解决方案：几番查询之后发现是oracle的一个小bug，可以通过更改配置文件“oraparam.ini”来解决，主要修改的地方看下图第一处修改地方： 第二处修改地方 添加内容如下：（实际上就是直接拷贝6.0的所有内容，然后修改成6.1即可） [Windows-6.1-required] #Minimum display colours for OUI to runMIN_DISPLAY_COLORS=256 #Minimum CPU speed required for OUI #CPU=300[Windows-6.1-optional] 不过这只是过了第一关，当安装程序执行后还有一步检查，还是会提示系统版本不支持。后来经过同事的指导。告诉我还有两个文件需要修改。 1，oracle安装包路径\\stage\\prereq\\db_prereqs\\db2，oracle安装包路径\\stage\\prereq\\db\\（下载的版本不一定完全一样。大家根据自己的文件路径寻找下面的文件即可）在上面两个路径中都一个==refhost.xml==文件。在其中加上6.1版本。参照下图。这回就可以正常安装了。","tags":[{"name":"Oracle","slug":"Oracle","permalink":"http://yaojian.me/tags/Oracle/"},{"name":"解决方案","slug":"解决方案","permalink":"http://yaojian.me/tags/解决方案/"},{"name":"Windows","slug":"Windows","permalink":"http://yaojian.me/tags/Windows/"}]},{"title":"Hello World","date":"2017-12-21T08:20:09.256Z","path":"2017/12/21/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"Sakura Editor 英文版","date":"2017-04-16T15:10:36.000Z","path":"2017/04/16/Sakura-Editor-英文版/","text":"做对日的都会用到SakuraEditor。这款编辑器真的很不错。不过因为是日本人发明的，所以不会日语的人使用起来有点麻烦，无意间看到编辑器下载下的讨论，原来已经可以切换英文了。方法参考下边的内容。 Thank you for your contribution to all of us.English version, even only that the toolbar is English is welcome.And, can you software support the color printer because I want print the program code in colors like UltraEdit.Thanks again!Discussion Language preference feature has been implemented on version 2.1.1.0 or later. You can download English language DLL from: https://sourceforge.net/projects/sakura-editor/files/language2/ Unzip and put dll file in the same directory as “sakura.exe“. Start editor and choice language from [共通設定]―[ウィンドウ]-[言語]. Sources has been commited to: https://svn.code.sf.net/p/sakura-editor/code/sakura/trunk2/sakura_lang_en_US Improvement in the translation, or translation into other languages is welcome. Color printing is supported on version 2.1.0.0 or later.","tags":[{"name":"编辑器","slug":"编辑器","permalink":"http://yaojian.me/tags/编辑器/"},{"name":"SakuraEditor","slug":"SakuraEditor","permalink":"http://yaojian.me/tags/SakuraEditor/"}]}]